# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Publish Akka Modules

on:
  push:
    tags:
      - 'v*'

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm ci
      - run: npm run test

  publish:
    needs: install
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://npm.pkg.github.com/
      - name: Set env
          # CURRENT_TAG v0.3.16-hotfix.4 -> 'hotfix'
          # CURRENT_TAG v0.3.16 -> ''
        run: echo "CURRENT_TAG=$(echo $GITHUB_REF_NAME | sed -e 's|^v[0-9.]*[-]*||g' -e 's|\..*||g' )" >> $GITHUB_ENV
       
      - name: Npm publish
        run: |
          npm ci
          npm run build --ws
          npm publish --ws --tag=${CURRENT_TAG:-latest} 
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
          
  create-github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - name: Determine prerelease
        run: "echo \"PRERELEASE=$([[ $GITHUB_REF_NAME =~ ^.*-.*$ ]] && echo true || echo false)  \" >> $GITHUB_ENV"
      - name: Determine tag
        run: "echo \"RELEASE_TAG=${GITHUB_REF#refs/tags/}\" >> $GITHUB_ENV"
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Create release
        uses: actions/github-script@v6
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          script: |
            try {
              console.log(process.env);
              console.log(process.env.PRERELEASE);
              console.log(process.env.PRERELEASE === 'true');
              const response = await github.rest.repos.createRelease({
                draft: true,
                generate_release_notes: true,
                name: process.env.RELEASE_TAG,
                owner: context.repo.owner,
                prerelease: true,
                repo: context.repo.repo,
                tag_name: process.env.RELEASE_TAG,
              });

              core.exportVariable('RELEASE_ID', response.data.id);
              core.exportVariable('RELEASE_UPLOAD_URL', response.data.upload_url);
            } catch (error) {
              core.setFailed(error.message);
            }
      # - name: Create Release Notes
      #   uses: actions/github-script@v4.0.2
      #   with:
      #     github-token: ${{secrets.GITHUB_TOKEN}}
      #     script: |
      #       await github.request(`POST /repos/${{ github.repository }}/releases`, {
      #         tag_name: "${{ github.ref }}",
      #         generate_release_notes: true
      #       });